package main

import (
	"math/rand"
	"strings"
	"testing"
)

func TestPrintArrayList(t *testing.T) {
	cases := []struct {
		desc  string
		wants []string
	}{
		{ "default", []string {
				"[64 64 23 56 45 26 17 27 28 58 88 57 39 58 52 16 21 30 20 64 15 58 36 70 21 46 32 10 71 62 67 18 15 44 18 83 30 50 69 64 47 94 76 78 59 47 58 40 22 97 30 98 34 92 59 40 67 84 96 24 40 87 97 78 14 63 89 30 99 41 13 76 54 37 38 93 59 14 13 73 64 88 12 71 92 43 12 96 82 70 36 72 90 38 68 58 49 50 40 11 11 99 69 51 10 79 49 56 44 42 62 56 88 49 13 49 49 24 30 73 37 28 78 18 67 43 85 17 70 17 76 79 57 60 82 22 85 65 76 10 54 99 47 49 41 17 60 73 64 47 41 54 50 20 17 98 10 33 52 69 80 98 94 96 14 41 70 13 77 96 98 15 12 64 66 92 78 57 29 93 22 87 59 79 38 21 94 32 40 19 91 20 26 78 28 55 72 33 48 60 12 72 90 89 48 32 18 86 85 92 84 11 28 45 43 20 28 28 43 62 30 39 13 10 35 90 56 66 48 42 97 80 27 59 49 20 38 70 40 97 94 73 43 28 73 89 53 86 67 75 63 16 93 14 78 68 65 86 34 34 50 17 94 16 75 59 29 90 84 33 52 50 70 25 13 36 53 91 88 59 18 43 38 81 27 44 53 57 88 90 34 46 75 46 20 75 39 72 16 90 50 36 29 19 20 91 51 46 32 91 15 51 21 59 58 66 47 83 68 79 31 80 69 65 21 96 90 52 81 59 39 14 97 97 52 94 48 32 62 38 84 15 29 83 57 67 52 86 69 56 74 94 12 53 82 11 89 60 45 65 21 70 97 63 23 16 71 37 64 87 38 46 46 59 69 39 42 56 36 63 56 78 27 29 42 91 66 71 77 69 35 92 77 55 62 77 76 10 31 39 14 11 99 58 81 12 48 77 99 66 84 66 47 27 21 47 99 16 10 70 16 16 36 77 24 22 27 56 60 34 27 50 91 41 62 54 79 52 36 70 47 73 65 80 73 55 99 52 14 96 62 35 36 83 27 19 28 36 48 30 30 69 99 24 98 74 28 42 57 63 32 22 94 63 23 85 60 17 82 61 94 73 12 71 44 66 50 78 47 43 64 22 62 99 47 39 88 13 13 34 34 63 63 53 93 16 15 67 28 53 88 81 19 13 99 10 82 36 40 66 41 68 48 69 78 54 33 56 11 73 16 16 82 59 96 61 24 16 84 93 46 76 26 59 26 36 66 59 63 46 55 20 54 57 18 85 87 50 73 96 57 30 48 20 10 52 54 34 28 75 29 17 72 16 55 16 42 15 11 41 70 99 56 51 14 91 67 91 54 23 69 11 43 58 22 34 26 93 20 63 93 80 64 34 24 59 64 69 21 23 79 97 54 53 85 10 42 97 77 81 44 73 62 47 24 23 70 88 22 77 31 57 11 95 33 68 25 81 77 77 33 73 71 20 87 16 23 17 34 70 87 85 10 66 71 39 78 62 52 53 63 37 62 92 38 74 32 92 27 73 78 88 55 56 84 98 51 84 79 54 15 38 59 44 70 12 91 37 88 11 77 55 66 18 65 19 47 12 84 69 85 28 44 29 91 31 94 26 15 48 55 88 12 49 82 99 75 88 63 88 91 17 98 11 12 56 18 54 89 59 97 68 63 15 39 69 32 37 15 38 93 39 75 69 40 70 64 68 46 98 56 23 31 55 47 29 18 76 21 52 89 17 41 26 46 67 30 80 37 83 99 17 27 56 67 92 11 92 74 17 84 47 98 29 90 39 97 73 88 94 15 30 78 88 91 79 41 70 26 12 35 81 28 78 91 31 71 61 86 14 96 32 78 17 25 12 52 10 90 46 56 59 18 73 38 49 19 90 76 91 50 98 86 13 87 48 53 59 84 34 84 67 85 19 77 64 65 11 80 38 85 74 82 75 48 76 79 67 97 61 57 84 43 87 88 29 45 25 94 73 62 85 75 74 70 11 19 29 10 86 46 25 50 33 88 95 13 56 95 70 78 56 77 50 31 13 37 11 22 45 34 32 53 61 81 70 86 73 56 97 52 49 31 75 19 56 12 54 19 34 28 44 89 34 30 68 46 93 72 48 80 25 49 15 41 95 13 68 40 29 52 70 29 78 20 17 84 68 66 33 68 88 21 57 76 80 53 96 96 93 81 71 65 28 15 12 74 38 41 97 66 60 38 19 18 98 16 81 30 40 76 75 40 50 45 38 13 38 40 92 18 58 41 20 78 76 33 37 48 86]",
			},
		},
	}
	for _, tc := range cases {
		t.Run(tc.desc, func(t *testing.T) {
			random := rand.New(rand.NewSource(0))
			writer := &strings.Builder{}
			PrintArrayList(random, writer)
			gots := strings.Split(writer.String(), "\n")
			for _, want := range tc.wants {
				if !contains(gots, want) {
					t.Errorf("\ngot  %s\nwant %s", gots, want)
				}
			}
		})
	}
}

func contains(arr []string, target string) bool {
	for _, s := range arr {
		if s == target {
			return true
		}
	}
	return false
}
